---
name: Start EC2 actions runner
description: Starts and registers a self-hosted GitHub actions repository runner (Linux on EC2)

inputs:
  aws-region:
    description: AWS region, e.g. eu-north-1
    required: true
  github-token:
    description: GitHub token (PAT with repo scope)
    required: true
  github-repo:
    description: Github repository, e.g. ghost/example
    required: true
  ami-id:
    description: AMI id, e.g. ami-12345678901234567
    required: true
  instance-type:
    description: EC2 instance type, e.g. t4g.small
    required: true
  runner-labels:
    description: Extra runner labels (comma-separated)
    required: false
  runner-home:
    description: Runner OS home directory
    required: false
    default: /home/ubuntu/actions-runner
  runner-user:
    description: Runner OS user
    required: false
    default: ubuntu
outputs:
  runner-id:
    description: GitHub repository runner id
    value: ${{ steps.main.outputs.runner-id }}
  instance-id:
    description: EC2 instance id
    value: ${{ steps.main.outputs.instance-id }}
runs:
  using: composite
  steps:
    - id: main
      shell: bash
      run: |
        runner_token="$(gh api -X POST -H "Accept: application/vnd.github.v3+json" repos/${{ inputs.github-repo }}/actions/runners/registration-token | jq -r .token)"
        
        user_data=$(cat <<HERE
        #!/bin/bash
        cd "${{ inputs.runner-home }}"
        instance_id="\$(curl -s http://169.254.169.254/latest/meta-data/instance-id)"
        sudo -u "${{ inputs.runner-user }}" ./config.sh --unattended --name "\$instance_id" --url "https://github.com/${{ inputs.github-repo }}" --token "$runner_token" --labels "${{ inputs.runner-labels }}"
        ./svc.sh install "${{ inputs.runner-user }}"
        ./svc.sh start
        HERE
        )

        echo "Starting EC2 instance ..."

        instance_id=$(aws ec2 run-instances \
          --image-id "${{ inputs.ami-id }}" \
          --instance-type "${{ inputs.instance-type }}" \
          --user-data "$user_data" \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHub self-hosted runner}]' \
          | jq -r .Instances[0].InstanceId)

        echo "Started EC2 instance: $instance_id"

        echo "Waiting for repository runner to be registered ..."

        for i in {1..12}; do
            sleep 10
            runner_id=$(gh api -X GET -H "Accept: application/vnd.github.v3+json" \
              -f per_page=100 repos/${{ inputs.github-repo }}/actions/runners | jq -r \
              --arg INSTANCE_ID "$instance_id" '.runners[] | select(.name == $INSTANCE_ID and .status == "online") | .id')
            if [ ! -z "$runner_id" ]; then
                break
            fi
        done

        if [ -z "$runner_id" ]; then
            echo "Runner registration failed (timed out). Terminating instance ..."
            aws ec2 terminate-instances --instance-ids "$instance_id"
            exit 1
        else
            echo "Repository runner registered with id: $runner_id"
        fi

        echo "::set-output name=runner-id::$runner_id"
        echo "::set-output name=instance-id::$instance_id"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
