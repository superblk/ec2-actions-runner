---
name: Start EC2 actions runner
description: Starts and registers a self-hosted GitHub actions repository runner (Linux on EC2)

inputs:
  aws-region:
    description: AWS region
    required: true
  aws-access-key-id:
    description: AWS access key ID
    required: true
  aws-secret-access-key:
    description: AWS secret access key
    required: true
  aws-role-to-assume:
    description: AWS IAM role (ARN) to assume
    required: false
  aws-launch-template:
    description: AWS EC2 launch template (AWS CLI format, e.g. LaunchTemplateId=lt-0abcd290751193123)
    required: true
  github-token:
    description: GitHub token (PAT with repo scope)
    required: true
  github-repo:
    description: Github repository, e.g. ghost/example
    default: ${{ github.repository }}
    required: false
  runner-labels:
    description: Extra runner labels (comma-separated)
    required: false
  runner-home:
    description: Runner OS home directory
    required: false
    default: /home/ubuntu/actions-runner
  runner-user:
    description: Runner OS user
    required: false
    default: ubuntu

outputs:
  runner-id:
    description: GitHub repository runner id
    value: ${{ steps.main.outputs.runner-id }}
  instance-id:
    description: EC2 instance id
    value: ${{ steps.main.outputs.instance-id }}

runs:
  using: composite
  steps:

    - id: auth
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws-region }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        role-session-name: ec2-actions-runner-start
        role-duration-seconds: 900

    - id: main
      shell: bash
      run: |
        runner_token="$(gh api -X POST -H 'Accept: application/vnd.github.v3+json' "repos/$GITHUB_REPO/actions/runners/registration-token" | jq -r .token)"
        
        user_data=$(cat <<HERE
        #!/bin/bash
        cd "$RUNNER_HOME"
        instance_id="\$(curl -s http://169.254.169.254/latest/meta-data/instance-id)"
        sudo -u "$RUNNER_USER" ./config.sh --unattended --name "\$instance_id" --url "https://github.com/$GITHUB_REPO" --token "$runner_token" --labels "$RUNNER_LABELS"
        ./svc.sh install "$RUNNER_USER"
        ./svc.sh start
        HERE
        )

        echo "Starting EC2 instance ..."

        instance_id="$(aws ec2 run-instances --launch-template "$LAUNCH_TEMPLATE" --user-data "$user_data" | jq -r .Instances[0].InstanceId)"

        echo "Started EC2 instance: $instance_id"

        echo "Waiting for repository runner to be registered ..."

        for i in {1..12}; do
            sleep 10
            runner_id=$(gh api -X GET -H 'Accept: application/vnd.github.v3+json' \
              -f per_page=100 "repos/$GITHUB_REPO/actions/runners" | jq -r --arg INSTANCE_ID "$instance_id" \
              '.runners[] | select(.name == $INSTANCE_ID and .status == "online") | .id')
            if [ ! -z "$runner_id" ]; then
                break
            fi
        done

        if [ -z "$runner_id" ]; then
            echo "Runner registration failed (timed out). Terminating instance ..."
            aws ec2 terminate-instances --instance-ids "$instance_id"
            exit 1
        else
            echo "Repository runner registered with id: $runner_id"
        fi

        echo "::set-output name=runner-id::$runner_id"
        echo "::set-output name=instance-id::$instance_id"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
        LAUNCH_TEMPLATE: ${{ inputs.aws-launch-template }}
        GITHUB_REPO: ${{ inputs.github-repo }}
        RUNNER_HOME: ${{ inputs.runner-home }}
        RUNNER_USER: ${{ inputs.runner-user }}
        RUNNER_LABELS: ${{ inputs.runner-labels }}
